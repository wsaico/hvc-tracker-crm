/**
 * Recomendaciones Mejoradas basadas en el Manual HVC Jauja
 * Sistema avanzado de consulta r√°pida para agentes HVC
 * @module EnhancedRecommendations
 */

export const ENHANCED_RECOMMENDATIONS = {
    // Categor√≠as principales organizadas por fases del viaje
    CATEGORIES: {
        pre_flight: {
            id: 'pre_flight',
            name: 'Pre-Vuelo',
            icon: 'üõ´',
            color: 'from-blue-500 to-cyan-500',
            description: 'Preparaci√≥n y llegada del pasajero'
        },
        during_flight: {
            id: 'during_flight',
            name: 'Durante Vuelo',
            icon: '‚úàÔ∏è',
            color: 'from-green-500 to-emerald-500',
            description: 'Atenci√≥n durante el proceso aeroportuario'
        },
        post_flight: {
            id: 'post_flight',
            name: 'Post-Vuelo',
            icon: 'üõ¨',
            color: 'from-purple-500 to-pink-500',
            description: 'Seguimiento y recuperaci√≥n post-viaje'
        },
        crisis_management: {
            id: 'crisis_management',
            name: 'Gesti√≥n de Crisis',
            icon: 'üö®',
            color: 'from-red-500 to-rose-500',
            description: 'Manejo de situaciones cr√≠ticas y recuperaci√≥n'
        }
    },

    // Recomendaciones espec√≠ficas por situaci√≥n
    RECOMMENDATIONS: {
        // PRE-VUELO
        arrival_recognition: {
            id: 'arrival_recognition',
            category: 'pre_flight',
            title: 'Reconocimiento Inmediato del Pasajero HVC',
            priority: 'critical',
            icon: 'üëÅÔ∏è',
            estimatedTime: '30-45 segundos',
            impact: 'Primera impresi√≥n determina percepci√≥n total del servicio',
            manualReference: 'Parte V: Touchpoint 2 - Llegada y Reconocimiento',

            quickActions: [
                'Posici√≥nate en zona de llegadas 5 minutos antes',
                'Identifica por equipaje premium, actitud ejecutiva o perfil conocido',
                'Ac√©rcate con energ√≠a positiva y contacto visual directo',
                'Usa nombre completo en primeros 10 segundos',
                'Ofrece asistencia inmediata con equipaje'
            ],

            detailedSteps: [
                {
                    phase: 'Preparaci√≥n (T-30 min)',
                    actions: [
                        'Revisa lista HVC del d√≠a con fotos y caracter√≠sticas',
                        'Coordina con equipo de check-in sobre llegadas',
                        'Prepara informaci√≥n de vuelos y servicios disponibles',
                        'Prepara alternativas de servicio personalizado'
                    ]
                },
                {
                    phase: 'Identificaci√≥n Visual',
                    actions: [
                        'Busca equipaje premium (maletas de marca, bolsos ejecutivos)',
                        'Identifica se√±ales de VIP (reloj caro, malet√≠n ejecutivo, actitud)',
                        'Observa nivel de urgencia en su caminar',
                        'Detecta si viene acompa√±ado o solo'
                    ]
                },
                {
                    phase: 'Acercamiento Proactivo',
                    actions: [
                        'Camina con confianza hacia el pasajero',
                        'Mant√©n contacto visual 60-70% del tiempo',
                        'Sonrisa genuina y postura abierta',
                        'Distancia apropiada: 1.5-2 metros inicialmente'
                    ]
                },
                {
                    phase: 'Saludo Personalizado',
                    actions: [
                        'Usa nombre completo inmediatamente',
                        'Confirma destino y vuelo sutilmente',
                        'Ofrece ayuda con equipaje de inmediato',
                        'Explica pr√≥ximos pasos claramente'
                    ]
                }
            ],

            examples: [
                {
                    scenario: 'Pasajero frecuente llegando tarde',
                    bad: '‚ùå Esperar a que pregunte por ayuda',
                    good: '‚úÖ "Sr. Garc√≠a, bienvenido. Veo que el tiempo es ajustado, ya coordin√© con check-in para agilizar su proceso"'
                },
                {
                    scenario: 'Pasajero con equipaje pesado',
                    bad: '‚ùå Saludar gen√©rico sin ofrecer ayuda',
                    good: '‚úÖ "Buenos d√≠as, Sra. L√≥pez. ¬øMe permite ayudarle con su equipaje?"'
                }
            ],

            checklist: [
                { item: 'Nombre usado en primeros 10 segundos', completed: false },
                { item: 'Contacto visual establecido', completed: false },
                { item: 'Asistencia con equipaje ofrecida', completed: false },
                { item: 'Pr√≥ximos pasos explicados claramente', completed: false },
                { item: 'Coordinaci√≥n con equipo completada', completed: false }
            ],

            keyPhrases: [
                '¬°Buenos d√≠as, [NOMBRE]! Bienvenido al aeropuerto de Jauja',
                'Mi nombre es [TU NOMBRE], ser√© su agente HVC hoy',
                '¬øViaja a [DESTINO] en el vuelo de las [HORA]?',
                'Perm√≠tame acompa√±arle al proceso de check-in'
            ],

            commonPitfalls: [
                'Esperar a que el pasajero te busque',
                'Saludo gen√©rico sin usar nombre',
                'Estar distra√≠do con celular o conversaci√≥n',
                'No ofrecer asistencia inmediata con equipaje'
            ],

            successMetrics: [
                'Tasa de reconocimiento >95%',
                'Tiempo de respuesta <45 segundos',
                'Calificaci√≥n primera impresi√≥n >8.5/10'
            ]
        },

        proactive_communication: {
            id: 'proactive_communication',
            category: 'pre_flight',
            title: 'Comunicaci√≥n Proactiva de Cambios',
            priority: 'high',
            icon: 'üí¨',
            estimatedTime: '2-5 minutos',
            impact: 'Reduce ansiedad y genera confianza en el servicio',
            manualReference: 'Parte VI: Comunicaci√≥n Proactiva',

            quickActions: [
                'Monitorea constantemente status de vuelos',
                'Identifica cambios antes que el pasajero',
                'Ac√©rcate proactivamente con informaci√≥n completa',
                'Usa estructura 4W: What, Why, What we do, What you can do',
                'Ofrece alternativas concretas y realistas'
            ],

            detailedSteps: [
                {
                    phase: 'Monitoreo Continuo',
                    actions: [
                        'Revisa pantallas de informaci√≥n cada 5-10 minutos',
                        'Mant√©n comunicaci√≥n con torre de control',
                        'Coordina con aerol√≠nea sobre posibles cambios',
                        'Antic√≠pate a situaciones comunes (clima, tr√°fico a√©reo)'
                    ]
                },
                {
                    phase: 'Detecci√≥n de Cambios',
                    actions: [
                        'Identifica retrasos, cambios de puerta, cancelaciones',
                        'Eval√∫a impacto en pasajero HVC espec√≠ficamente',
                        'Prepara informaci√≥n completa antes de comunicar',
                        'Coordina servicios alternativos disponibles'
                    ]
                },
                {
                    phase: 'Comunicaci√≥n Proactiva',
                    actions: [
                        'Ac√©rcate al pasajero antes de que note el cambio',
                        'Usa lenguaje positivo y tranquilizador',
                        'Proporciona informaci√≥n completa y clara',
                        'Ofrece soluciones y alternativas realistas'
                    ]
                },
                {
                    phase: 'Seguimiento',
                    actions: [
                        'Actualizaciones cada 15-20 minutos',
                        'Confirma que el pasajero entendi√≥ la informaci√≥n',
                        'Documenta comunicaci√≥n para registro',
                        'Coordina con otros puntos de contacto'
                    ]
                }
            ],

            examples: [
                {
                    scenario: 'Retraso de 30 minutos por clima',
                    bad: '‚ùå "Hay un retraso" (sin m√°s contexto)',
                    good: '‚úÖ "Sr. Mendoza, quiero informarle que tenemos un retraso de 30 minutos por condiciones clim√°ticas en destino. Estamos priorizando el despegue apenas mejore. Mientras tanto, perm√≠teme acompa√±arle a un √°rea m√°s c√≥moda y le traigo un caf√©"'
                },
                {
                    scenario: 'Cambio de puerta de embarque',
                    bad: '‚ùå Dejar que el pasajero lo descubra solo',
                    good: '‚úÖ "Dra. Silva, el vuelo mantiene horario pero cambi√≥ a puerta 12. Perm√≠tame acompa√±arla para evitar confusiones"'
                }
            ],

            checklist: [
                { item: 'Status de vuelo monitoreado constantemente', completed: false },
                { item: 'Informaci√≥n completa preparada', completed: false },
                { item: 'Comunicaci√≥n proactiva iniciada', completed: false },
                { item: 'Alternativas ofrecidas claramente', completed: false },
                { item: 'Seguimiento programado', completed: false }
            ],

            keyPhrases: [
                'Quiero informarle primero que...',
                'La situaci√≥n actual es...',
                'Esto es lo que estamos haciendo...',
                'Mientras tanto, le ofrezco...',
                'Le mantendr√© informado cada 15 minutos'
            ],

            commonPitfalls: [
                'Esperar a que el pasajero pregunte',
                'Dar informaci√≥n incompleta o confusa',
                'Usar lenguaje negativo ("lo siento mucho")',
                'No ofrecer alternativas concretas'
            ],

            successMetrics: [
                'Reducci√≥n de quejas por falta de informaci√≥n >70%',
                'Aumento de satisfacci√≥n en situaciones de cambio +25%',
                'Tasa de comunicaci√≥n proactiva >90%'
            ]
        },

        service_without_infrastructure: {
            id: 'service_without_infrastructure',
            category: 'pre_flight',
            title: 'Servicio Humano de Excelencia en Aeropuertos Peque√±os',
            priority: 'critical',
            icon: 'ü§ù',
            estimatedTime: 'Continuo',
            impact: 'Basado en investigaci√≥n: Los pasajeros PREFIEREN aeropuertos peque√±os bien operados',
            manualReference: 'Manual HVC - Conclusiones de Voz del Cliente',

            quickActions: [
                'VELOCIDAD es el nuevo lujo: 5 minutos de check-in > lounge con champagne',
                'PERSONAL es make-or-break: Factor #1 en reviews negativas vs positivas',
                'TAMA√ëO PEQUE√ëO = VENTAJA: Pasajeros prefieren aeropuertos peque√±os bien operados',
                'COMUNICACI√ìN supera tecnolog√≠a: Ausencia de pantallas no importa si hay comunicaci√≥n humana',
                'EXPECTATIVAS BAJAS = F√ÅCIL superar: Esperan velocidad, amabilidad, claridad'
            ],

            detailedSteps: [
                {
                    phase: 'Filosof√≠a del Agente HVC',
                    actions: [
                        'NO eres un "bot√≥n de lujo" - eres un embajador de experiencia',
                        'NO eres un simple asistente - eres un solucionador proactivo',
                        'NO eres un robot con scripts - eres un profesional empoderado',
                        'S√ç eres el rostro humano de un servicio excepcional',
                        'S√ç eres un creador de momentos memorables'
                    ]
                },
                {
                    phase: 'Las 3 Claves del √âxito (Seg√∫n Investigaci√≥n)',
                    actions: [
                        'VELOCIDAD: "5 minutos de check-in" genera m√°s satisfacci√≥n que amenities f√≠sicos',
                        'AMABILIDAD: Personal c√°lido es factor #2 en reviews positivas',
                        'CLARIDAD: Comunicaci√≥n humana proactiva supera pantallas digitales'
                    ]
                },
                {
                    phase: 'Competencias Esenciales',
                    actions: [
                        'Inteligencia Emocional: Leer emociones sin que te las digan',
                        'Proactividad: Anticipar necesidades ANTES de que las expresen',
                        'Comunicaci√≥n Excepcional: 55% no verbal, 35% verbal, 10% paraverbal'
                    ]
                },
                {
                    phase: 'T√©cnicas Espec√≠ficas para Jauja',
                    actions: [
                        'Usa el NOMBRE del pasajero al menos 3 veces en la interacci√≥n',
                        'Mant√©n contacto visual 60-70% del tiempo (no 100%, es intimidante)',
                        'Sonr√≠e genuinamente (m√∫sculo orbicular del ojo activado)',
                        'Asiente mientras escuchas (valida que prestas atenci√≥n)',
                        'Repite informaci√≥n cr√≠tica (gate, horario, documentaci√≥n)'
                    ]
                }
            ],

            examples: [
                {
                    scenario: 'Pasajero HVC llegando (basado en investigaci√≥n)',
                    bad: '‚ùå "Buenos d√≠as, ¬øen qu√© puedo ayudarle?" (gen√©rico)',
                    good: '‚úÖ "¬°Buenos d√≠as, Sr. Mendoza! Bienvenido de nuevo a Jauja. Veo que viene directo de una reuni√≥n importante - perm√≠teme aliviarle el estr√©s del viaje"'
                },
                {
                    scenario: 'Retraso de vuelo (expectativas bajas = f√°cil superar)',
                    bad: '‚ùå "Hay un retraso" (sin m√°s contexto)',
                    good: '‚úÖ "Sr. Garc√≠a, quiero informarle primero que tenemos un retraso de 30 minutos por condiciones clim√°ticas. Estamos priorizando su despegue apenas mejore. Mientras tanto, perm√≠teme acompa√±arle y le traigo un caf√©"'
                }
            ],

            checklist: [
                { item: 'Nombre usado 3+ veces en la interacci√≥n', completed: false },
                { item: 'Contacto visual 60-70% del tiempo', completed: false },
                { item: 'Sonrisa genuina (m√∫sculo orbicular activado)', completed: false },
                { item: 'Informaci√≥n cr√≠tica repetida', completed: false },
                { item: 'Velocidad + Amabilidad + Claridad aplicadas', completed: false }
            ],

            keyPhrases: [
                '¬°Buenos d√≠as, [NOMBRE]! Bienvenido de nuevo a Jauja',
                'Veo que [contexto espec√≠fico] - perm√≠teme [soluci√≥n anticipada]',
                'Quiero informarle primero que... (comunicaci√≥n proactiva)',
                'Estamos priorizando [acci√≥n espec√≠fica] para usted',
                'Mientras tanto, perm√≠teme [servicio personal]'
            ],

            commonPitfalls: [
                'Ser reactivo en lugar de proactivo',
                'No usar el nombre del pasajero',
                'Comunicaci√≥n gen√©rica sin personalizaci√≥n',
                'No anticipar necesidades b√°sicas',
                'Perder la ventaja del tama√±o peque√±o'
            ],

            successMetrics: [
                'Tiempo de check-in <5 minutos (velocidad)',
                'Uso de nombre >3 veces por interacci√≥n',
                'Comunicaci√≥n proactiva >90%',
                'Satisfacci√≥n con servicio personal >9/10',
                'Referencias sobre "servicio humano excepcional"'
            ]
        },

        // DURANTE VUELO
        checkin_express: {
            id: 'checkin_express',
            category: 'during_flight',
            title: 'Check-in Express Premium',
            priority: 'high',
            icon: '‚ö°',
            estimatedTime: '2-4 minutos',
            impact: 'Velocidad percibida 3x mayor',
            manualReference: 'Parte V: Touchpoint 3 - Check-in Express',

            quickActions: [
                'Prepara documentos antes de que llegue',
                'Saludo personalizado inmediato',
                'Proceso eficiente pero no apresurado',
                'Confirma preferencias (ventana/pasillo)',
                'Explica pr√≥ximos pasos claramente'
            ],

            detailedSteps: [
                {
                    phase: 'Preparaci√≥n Previa',
                    actions: [
                        'Revisa reserva y documentos requeridos',
                        'Prepara equipaje de mano si aplica',
                        'Coordina con counter de check-in',
                        'Ten a mano informaci√≥n de vuelo actualizada'
                    ]
                },
                {
                    phase: 'Recepci√≥n de Documentos',
                    actions: [
                        'Recibe pasaporte/DNI con ambas manos',
                        'Agradece cort√©smente',
                        'Verifica validez visual r√°pida',
                        'Confirma identidad del pasajero'
                    ]
                },
                {
                    phase: 'Procesamiento Eficiente',
                    actions: [
                        'Ingresa datos con precisi√≥n',
                        'Comunica progreso: "Todo en orden con su reserva"',
                        'Verifica restricciones y requisitos especiales',
                        'Confirma equipaje si aplica'
                    ]
                },
                {
                    phase: 'Confirmaci√≥n y Entrega',
                    actions: [
                        'Resume informaci√≥n clave',
                        'Entrega documentos con ambas manos',
                        'Explica boarding pass claramente',
                        'Confirma puerta y horario de embarque'
                    ]
                }
            ],

            examples: [
                {
                    scenario: 'Pasajero con m√∫ltiples documentos',
                    bad: '‚ùå Procesar en silencio sin comunicaci√≥n',
                    good: '‚úÖ "Sr. Torres, veo que tiene visa y pasaporte. Todo est√° en orden, su check-in est√° completo"'
                },
                {
                    scenario: 'Preferencia de asiento especial',
                    bad: '‚ùå Asignar sin consultar',
                    good: '‚úÖ "¬øPrefiere ventana o pasillo? Tengo disponible el 12A ventana como solicit√≥ anteriormente"'
                }
            ],

            checklist: [
                { item: 'Documentos preparados previamente', completed: false },
                { item: 'Proceso completado en <4 minutos', completed: false },
                { item: 'Preferencias de asiento confirmadas', completed: false },
                { item: 'Informaci√≥n de vuelo clara entregada', completed: false },
                { item: 'Pr√≥ximos pasos explicados', completed: false }
            ],

            keyPhrases: [
                'Perm√≠tame su pasaporte y c√≥digo de reserva',
                'Todo en orden con su documentaci√≥n',
                'Su asiento confirmado es [N√öMERO]',
                'Embarque comienza en [TIEMPO] en puerta [N√öMERO]'
            ],

            commonPitfalls: [
                'No preparar documentos previamente',
                'Procesar en silencio sin comunicaci√≥n',
                'No confirmar preferencias del pasajero',
                'Entregar documentos sin explicaci√≥n'
            ],

            successMetrics: [
                'Tiempo promedio check-in <3 minutos',
                'Tasa de errores en procesamiento <1%',
                'Satisfacci√≥n check-in >9/10'
            ]
        },

        security_compensation: {
            id: 'security_compensation',
            category: 'during_flight',
            title: 'Compensaci√≥n por Espera en Seguridad',
            priority: 'medium',
            icon: 'üõ°Ô∏è',
            estimatedTime: 'Seg√∫n tiempo de espera',
            impact: 'Convierte limitaci√≥n en ventaja competitiva',
            manualReference: 'Parte V: Touchpoint 4 - Seguridad con Colas Compartidas',

            quickActions: [
                'Eval√∫a longitud de cola al llegar',
                'Ofrece alternativas de espera premium',
                'Proporciona actualizaciones cada 10 minutos',
                'Compensa con servicios adicionales',
                'Asegura experiencia fluida post-seguridad'
            ],

            detailedSteps: [
                {
                    phase: 'Evaluaci√≥n Inicial',
                    actions: [
                        'Observa flujo de seguridad al aproximarte',
                        'Estima tiempo de espera realista',
                        'Identifica opciones de compensaci√≥n disponibles',
                        'Prepara alternativas de servicio personalizado (bebidas, snacks, acompa√±amiento)'
                    ]
                },
                {
                    phase: 'Oferta de Alternativas',
                    actions: [
                        'Si cola >15 minutos: ofrece acompa√±amiento personal',
                        'Proporciona agua, snacks o bebidas',
                        'Ofrece asiento preferencial para esperar',
                        'Sugiere actividades durante espera'
                    ]
                },
                {
                    phase: 'Acompa√±amiento Activo',
                    actions: [
                        'Mant√©n presencia visible durante espera',
                        'Proporciona actualizaciones cada 10-15 minutos',
                        'Ayuda con preparaci√≥n de bandejas',
                        'Recordatorios de objetos prohibidos'
                    ]
                },
                {
                    phase: 'Transici√≥n Fluida',
                    actions: [
                        'Recibe al pasajero del otro lado',
                        'Confirma que todo sali√≥ bien',
                        'Dirige a zona de embarque',
                        'Resume pr√≥ximos pasos'
                    ]
                }
            ],

            examples: [
                {
                    scenario: 'Cola de 20 minutos en seguridad',
                    bad: '‚ùå "Tiene que esperar en la cola como todos"',
                    good: '‚úÖ "Sr. Vargas, veo que hay una cola de aproximadamente 20 minutos. Le invito a esperar en nuestra zona VIP con agua fresca y WiFi. Le avisar√© cuando sea el mejor momento para pasar"'
                },
                {
                    scenario: 'Pasajero ansioso por tiempo',
                    bad: '‚ùå Ignorar se√±ales de estr√©s',
                    good: '‚úÖ "Dra. Luna, entiendo que su tiempo es valioso. Estoy coordinando con seguridad para optimizar su paso. Mientras tanto, aqu√≠ tiene una bebida fresca"'
                }
            ],

            checklist: [
                { item: 'Tiempo de cola evaluado correctamente', completed: false },
                { item: 'Alternativas ofrecidas proactivamente', completed: false },
                { item: 'Actualizaciones proporcionadas regularmente', completed: false },
                { item: 'Compensaci√≥n apropiada entregada', completed: false },
                { item: 'Transici√≥n post-seguridad fluida', completed: false }
            ],

            keyPhrases: [
                'Veo que hay una cola de aproximadamente [TIEMPO] minutos',
                'Le invito a esperar c√≥modamente en nuestra zona VIP',
                'Le mantendr√© informado del progreso',
                'Perm√≠tame ayudarle con la preparaci√≥n de bandejas',
                'Todo listo, ahora le acompa√±o a la zona de embarque'
            ],

            commonPitfalls: [
                'No ofrecer alternativas de espera',
                'Subestimar el impacto psicol√≥gico de la espera',
                'No proporcionar actualizaciones regulares',
                'Olvidar la transici√≥n post-seguridad'
            ],

            successMetrics: [
                'Reducci√≥n de quejas por seguridad >60%',
                'Satisfacci√≥n durante esperas >7.5/10',
                'Tasa de uso de alternativas de espera >40%'
            ]
        },

        // POST-VUELO
        post_flight_followup: {
            id: 'post_flight_followup',
            category: 'post_flight',
            title: 'Seguimiento Post-Vuelo 48h',
            priority: 'high',
            icon: 'üìû',
            estimatedTime: '5-10 minutos',
            impact: '+25% recuperaci√≥n de NPS negativo',
            manualReference: 'Parte VI: Seguimiento Post-Vuelo 48h',

            quickActions: [
                'Identifica detractores (calificaci√≥n ‚â§6)',
                'Contacta dentro de ventana √≥ptima (24-48h)',
                'Usa estructura de 7 pasos probada',
                'Documenta conversaci√≥n completamente',
                'Implementa acciones de mejora identificadas'
            ],

            detailedSteps: [
                {
                    phase: 'Identificaci√≥n de Casos',
                    actions: [
                        'Revisa calificaciones Medallia post-vuelo',
                        'Identifica detractores (‚â§6) y casos especiales',
                        'Prioriza seg√∫n categor√≠a HVC y severidad',
                        'Prepara informaci√≥n del vuelo e interacci√≥n previa'
                    ]
                },
                {
                    phase: 'Preparaci√≥n del Contacto',
                    actions: [
                        'Elige canal preferido (llamada, WhatsApp, email)',
                        'Prepara script personalizado con datos espec√≠ficos',
                        'Coordina con supervisor para casos complejos',
                        'Ten a mano opciones de compensaci√≥n disponibles'
                    ]
                },
                {
                    phase: 'Estructura de 7 Pasos',
                    actions: [
                        '1. Saludo personalizado y contextual',
                        '2. Prop√≥sito claro: "Quiero asegurarme de que todo sali√≥ bien"',
                        '3. Pregunta abierta: "¬øC√≥mo estuvo su experiencia?"',
                        '4. Escucha activa sin interrumpir',
                        '5. Disculpa genuina si aplica',
                        '6. Acci√≥n concreta: compensaci√≥n o mejora',
                        '7. Cierre positivo con compromiso de mejora'
                    ]
                },
                {
                    phase: 'Documentaci√≥n y Seguimiento',
                    actions: [
                        'Registra conversaci√≥n en CRM',
                        'Actualiza perfil del pasajero',
                        'Implementa mejoras sist√©micas identificadas',
                        'Programa seguimiento adicional si necesario'
                    ]
                }
            ],

            examples: [
                {
                    scenario: 'Detractor por retraso no comunicado',
                    bad: '‚ùå No contactar o esperar a que reclame',
                    good: '‚úÖ "Sr. Castro, soy Ana del equipo HVC. Vi que su vuelo del martes tuvo un retraso. Quiero entender qu√© pas√≥ y asegurarme de que su pr√≥ximo viaje sea perfecto. ¬øTiene unos minutos?"'
                },
                {
                    scenario: 'Promotor para fidelizaci√≥n',
                    bad: '‚ùå Solo email gen√©rico de agradecimiento',
                    good: '‚úÖ "Sra. Morales, gracias por su calificaci√≥n de 10/10. Nos alegra mucho que haya tenido una experiencia excelente. ¬øHay algo espec√≠fico que le gustar√≠a que mantengamos o mejoremos?"'
                }
            ],

            checklist: [
                { item: 'Casos prioritarios identificados correctamente', completed: false },
                { item: 'Contacto realizado en ventana √≥ptima (24-48h)', completed: false },
                { item: 'Estructura de 7 pasos seguida completamente', completed: false },
                { item: 'Compensaci√≥n apropiada ofrecida', completed: false },
                { item: 'Conversaci√≥n documentada completamente', completed: false }
            ],

            keyPhrases: [
                'Soy [NOMBRE] del equipo HVC, atend√≠ su vuelo del [FECHA]',
                'Vi que [tuvo una experiencia/retardo/incidente]',
                'Quiero asegurarme de que todo est√© bien ahora',
                '¬øC√≥mo estuvo su experiencia general?',
                'Perm√≠tame [soluci√≥n concreta y personalizada] por las molestias',
                'Me comprometo a que su pr√≥ximo vuelo sea perfecto'
            ],

            commonPitfalls: [
                'Contactar fuera de la ventana √≥ptima',
                'No preparar informaci√≥n espec√≠fica del caso',
                'Interrumpir al pasajero durante su explicaci√≥n',
                'No documentar la conversaci√≥n adecuadamente',
                'Olvidar implementar mejoras sist√©micas'
            ],

            successMetrics: [
                'Tasa de contacto efectivo >80%',
                'Recuperaci√≥n de detractores >60%',
                'Aumento de NPS post-contacto >2 puntos',
                'Satisfacci√≥n con proceso de seguimiento >8.5/10'
            ]
        },

        // GESTI√ìN DE CRISIS
        service_recovery_paradox: {
            id: 'service_recovery_paradox',
            category: 'crisis_management',
            title: 'Recuperaci√≥n de Servicio - Paradoja del Servicio',
            priority: 'critical',
            icon: 'üîß',
            estimatedTime: '10-30 minutos',
            impact: '+150% satisfacci√≥n vs no actuar',
            manualReference: 'Parte I: Paradoja de la Recuperaci√≥n del Servicio',

            quickActions: [
                'Reconoce el problema INMEDIATAMENTE sin excusas',
                'Toma OWNERSHIP total: "YO me encargo"',
                'Ofrece opciones para dar control al pasajero',
                'Supera expectativas con soluciones creativas y personalizadas',
                'Hace seguimiento para confirmar resoluci√≥n'
            ],

            detailedSteps: [
                {
                    phase: 'Reconocimiento Inmediato',
                    actions: [
                        'Admite el problema sin justificaciones',
                        'Valida emociones del pasajero',
                        'Toma responsabilidad personal',
                        'Muestra urgencia genuina en resolver'
                    ]
                },
                {
                    phase: 'Evaluaci√≥n R√°pida',
                    actions: [
                        'Identifica causa ra√≠z en 30 segundos',
                        'Eval√∫a opciones de soluci√≥n disponibles',
                        'Considera impacto en experiencia general',
                        'Coordina con supervisor si supera autoridad'
                    ]
                },
                {
                    phase: 'Soluci√≥n con Opciones',
                    actions: [
                        'Ofrece m√∫ltiples alternativas',
                        'Deja que el pasajero elija la mejor opci√≥n',
                        'Explica claramente cada alternativa',
                        'Asegura que la soluci√≥n sea tangible y valiosa'
                    ]
                },
                {
                    phase: 'Compensaci√≥n Generosa',
                    actions: [
                        'Supera expectativas del pasajero',
                        'Incluye soluciones simb√≥licas y pr√°cticas que generen valor emocional',
                        'Hace visible el esfuerzo de recuperaci√≥n',
                        'Personaliza seg√∫n perfil del pasajero'
                    ]
                },
                {
                    phase: 'Seguimiento Activo',
                    actions: [
                        'Confirma que la soluci√≥n funcion√≥',
                        'Pregunta si hay algo m√°s que hacer',
                        'Documenta para aprendizaje futuro',
                        'Programa contacto adicional si necesario'
                    ]
                }
            ],

            examples: [
                {
                    scenario: 'Equipaje perdido en vuelo internacional',
                    bad: '‚ùå "Eso es responsabilidad de la aerol√≠nea, no m√≠a"',
                    good: '‚úÖ "Sr. Mendoza, entiendo completamente su preocupaci√≥n. Aunque el equipaje es responsabilidad de la aerol√≠nea, YO personalmente me encargar√© de que esto se resuelva hoy mismo. Le proporcionar√© kit de emergencia premium, coordinar√© entrega a domicilio cuando aparezca, y gestionar√© una compensaci√≥n apropiada seg√∫n las pol√≠ticas de la aerol√≠nea. ¬øPrefiere que lo contacte por tel√©fono o WhatsApp para actualizaciones?"'
                },
                {
                    scenario: 'Asiento equivocado asignado',
                    bad: '‚ùå "Debe esperar al embarque para cambiarlo"',
                    good: '‚úÖ "Dra. Silva, veo el error en su asignaci√≥n. Perm√≠tame corregirlo inmediatamente. [Hace llamada r√°pida] Listo, le asignaron el asiento 4A que prefiere. Adem√°s, le ofrezco embarque prioritario como compensaci√≥n. ¬øHay algo m√°s en lo que pueda ayudarle?"'
                }
            ],

            checklist: [
                { item: 'Problema reconocido sin excusas', completed: false },
                { item: 'Ownership total asumido', completed: false },
                { item: 'Opciones ofrecidas claramente', completed: false },
                { item: 'Compensaci√≥n generosa proporcionada', completed: false },
                { item: 'Seguimiento programado', completed: false }
            ],

            keyPhrases: [
                'Entiendo completamente su frustraci√≥n',
                'YO me encargo personalmente de resolver esto',
                '¬øQu√© opci√≥n prefiere: A, B o C?',
                'Para compensar las molestias, le ofrezco...',
                '¬øHay algo m√°s en lo que pueda ayudarle?',
                'Me asegurar√© de que esto no vuelva a pasar'
            ],

            commonPitfalls: [
                'Dar excusas o culpar a otros',
                'No asumir ownership completo',
                'Ofrecer solo una soluci√≥n sin opciones',
                'Compensaci√≥n insuficiente o invisible',
                'No hacer seguimiento posterior'
            ],

            successMetrics: [
                'Tasa de recuperaci√≥n exitosa >85%',
                'Aumento de satisfacci√≥n post-recuperaci√≥n +150%',
                'Reducci√≥n de escalamiento a supervisor >90%',
                'NPS post-recuperaci√≥n >7.5'
            ]
        },

        crisis_empathy_first: {
            id: 'crisis_empathy_first',
            category: 'crisis_management',
            title: 'Empat√≠a Primero en Situaciones de Crisis',
            priority: 'critical',
            icon: 'üíö',
            estimatedTime: '2-5 minutos iniciales',
            impact: 'Reduce escalamiento y genera confianza en el servicio',
            manualReference: 'Parte VI: Empat√≠a y Escucha Activa',

            quickActions: [
                'ESCUCHA PRIMERO, SOLUCIONA DESPU√âS',
                'Valida emociones: "Entiendo su frustraci√≥n"',
                'Usa t√©cnica del espejo: repite con tus palabras',
                'Cambia "PERO" por "Y" en respuestas',
                'Ofrece control: "¬øQu√© prefiere que hagamos?"'
            ],

            detailedSteps: [
                {
                    phase: 'Escucha Activa Inicial',
                    actions: [
                        'Deja que el pasajero exprese TODO sin interrumpir',
                        'Lenguaje corporal: contacto visual, asentir, inclinarte',
                        'Silencio estrat√©gico: espera 2-3 segundos despu√©s de terminar',
                        'Toma notas mentales de puntos clave'
                    ]
                },
                {
                    phase: 'Validaci√≥n Emocional',
                    actions: [
                        'Reconoce emoci√≥n espec√≠fica: frustraci√≥n, preocupaci√≥n, enojo',
                        'Normaliza: "Es completamente comprensible sentirse as√≠"',
                        'Empatiza personalmente: "Si estuviera en su lugar..."',
                        'Evita frases vac√≠as: "C√°lmese" o "No se preocupe"'
                    ]
                },
                {
                    phase: 'T√©cnica del Espejo',
                    actions: [
                        'Repite lo que entendiste: "Si entend√≠ bien..."',
                        'Confirma comprensi√≥n: "¬øEs correcto?"',
                        'Ajusta si es necesario basado en respuesta',
                        'Demuestra que REALMENTE escuchaste'
                    ]
                },
                {
                    phase: 'Transici√≥n a Soluci√≥n',
                    actions: [
                        'Una vez validada la emoci√≥n, ofrece ayudar',
                        'Da opciones para devolver control',
                        'Mant√©n tono calmado y confiado',
                        'Comunica cada paso que vas a dar'
                    ]
                }
            ],

            examples: [
                {
                    scenario: 'Pasajero furioso por vuelo cancelado',
                    bad: '‚ùå "C√°lmese, le voy a ayudar"',
                    good: '‚úÖ "Sr. L√≥pez, entiendo perfectamente su frustraci√≥n. Si yo estuviera esperando este vuelo importante y lo cancelaran, tambi√©n estar√≠a muy molesto. Cu√©nteme, ¬øcu√°l es el impacto principal que esto tiene en sus planes?"'
                },
                {
                    scenario: 'Pasajero ansioso por conexi√≥n ajustada',
                    bad: '‚ùå "No se preocupe, todo estar√° bien"',
                    good: '‚úÖ "Dra. Mart√≠nez, veo que est√° preocupado por su conexi√≥n. Es completamente normal sentirse ansioso con tiempos tan ajustados. D√©jeme revisar el status actual y ver todas las opciones disponibles para usted"'
                }
            ],

            checklist: [
                { item: 'Escucha completa sin interrupciones', completed: false },
                { item: 'Emoci√≥n validada espec√≠ficamente', completed: false },
                { item: 'T√©cnica del espejo utilizada', completed: false },
                { item: 'Control devuelto al pasajero', completed: false },
                { item: 'Transici√≥n calmada a soluci√≥n', completed: false }
            ],

            keyPhrases: [
                'Entiendo perfectamente su [frustraci√≥n/preocupaci√≥n/molestia]',
                'Si estuviera en su lugar, yo tambi√©n me sentir√≠a [emoci√≥n]',
                'Si entend√≠ bien, el problema principal es... ¬øcorrecto?',
                '¬øQu√© opci√≥n prefiere que exploremos primero?',
                'Perm√≠tame ver qu√© puedo hacer para ayudarle'
            ],

            commonPitfalls: [
                'Interrumpir al pasajero antes de terminar',
                'Minimizar emociones: "No es para tanto"',
                'Dar soluciones antes de validar emociones',
                'Usar frases condescendientes',
                'No devolver control al pasajero'
            ],

            successMetrics: [
                'Reducci√≥n de escalamiento >70%',
                'Tiempo para calmar situaci√≥n <5 minutos',
                'Satisfacci√≥n con manejo de crisis >8/10',
                'Pasajeros que reportan sentirse "escuchados" >90%'
            ]
        }
    },

    // Funciones de utilidad
    getRecommendationsByCategory: function(categoryId) {
        return Object.values(this.RECOMMENDATIONS).filter(rec => rec.category === categoryId);
    },

    getRecommendationById: function(id) {
        return this.RECOMMENDATIONS[id];
    },

    searchRecommendations: function(query) {
        const lowercaseQuery = query.toLowerCase();
        return Object.values(this.RECOMMENDATIONS).filter(rec =>
            rec.title.toLowerCase().includes(lowercaseQuery) ||
            rec.quickActions.some(action => action.toLowerCase().includes(lowercaseQuery)) ||
            rec.keyPhrases.some(phrase => phrase.toLowerCase().includes(lowercaseQuery))
        );
    },

    getPriorityColor: function(priority) {
        const colors = {
            critical: 'from-red-500 to-rose-500',
            high: 'from-orange-500 to-amber-500',
            medium: 'from-yellow-500 to-lime-500',
            low: 'from-green-500 to-emerald-500'
        };
        return colors[priority] || colors.medium;
    },

    getPriorityIcon: function(priority) {
        const icons = {
            critical: 'üö®',
            high: '‚ö†Ô∏è',
            medium: 'üìã',
            low: '‚ÑπÔ∏è'
        };
        return icons[priority] || icons.medium;
    }
};

/**
 * Funciones de gesti√≥n de estado para recomendaciones
 */
export class RecommendationManager {
    constructor() {
        this.favorites = new Set(JSON.parse(localStorage.getItem('hvc_favorites') || '[]'));
        this.usageStats = JSON.parse(localStorage.getItem('hvc_usage_stats') || '{}');
        this.checklistStates = JSON.parse(localStorage.getItem('hvc_checklists') || '{}');
    }

    toggleFavorite(recommendationId) {
        if (this.favorites.has(recommendationId)) {
            this.favorites.delete(recommendationId);
        } else {
            this.favorites.add(recommendationId);
        }
        this.saveFavorites();
        return this.favorites.has(recommendationId);
    }

    isFavorite(recommendationId) {
        return this.favorites.has(recommendationId);
    }

    getFavorites() {
        return Array.from(this.favorites).map(id => ENHANCED_RECOMMENDATIONS.getRecommendationById(id)).filter(Boolean);
    }

    trackUsage(recommendationId) {
        this.usageStats[recommendationId] = (this.usageStats[recommendationId] || 0) + 1;
        localStorage.setItem('hvc_usage_stats', JSON.stringify(this.usageStats));
    }

    getUsageStats() {
        return this.usageStats;
    }

    getMostUsed(limit = 5) {
        return Object.entries(this.usageStats)
            .sort(([,a], [,b]) => b - a)
            .slice(0, limit)
            .map(([id]) => ENHANCED_RECOMMENDATIONS.getRecommendationById(id))
            .filter(Boolean);
    }

    getTodayUsage() {
        const today = new Date().toISOString().split('T')[0];
        let todayCount = 0;

        Object.entries(this.usageStats).forEach(([id, stats]) => {
            if (typeof stats === 'object' && stats[today]) {
                todayCount += stats[today];
            } else if (typeof stats === 'number') {
                // Fallback para datos antiguos
                todayCount += stats;
            }
        });

        return todayCount;
    }

    updateChecklistState(recommendationId, checklistIndex, completed) {
        if (!this.checklistStates[recommendationId]) {
            this.checklistStates[recommendationId] = [];
        }
        if (!this.checklistStates[recommendationId][checklistIndex]) {
            this.checklistStates[recommendationId][checklistIndex] = { completed: false, timestamp: null };
        }
        this.checklistStates[recommendationId][checklistIndex].completed = completed;
        this.checklistStates[recommendationId][checklistIndex].timestamp = completed ? new Date().toISOString() : null;
        this.saveChecklistStates();
    }

    getChecklistState(recommendationId) {
        return this.checklistStates[recommendationId] || [];
    }

    getChecklistProgress(recommendationId) {
        const recommendation = ENHANCED_RECOMMENDATIONS.RECOMMENDATIONS[recommendationId];
        if (!recommendation || !recommendation.checklist || recommendation.checklist.length === 0) {
            return 0;
        }

        const totalItems = recommendation.checklist.length;
        const checklistState = this.getChecklistState(recommendationId);
        
        const completedItems = checklistState.filter(item => item && item.completed).length;

        if (totalItems === 0) {
            return 0;
        }

        return Math.round((completedItems / totalItems) * 100);
    }

    saveFavorites() {
        localStorage.setItem('hvc_favorites', JSON.stringify(Array.from(this.favorites)));
    }

    saveChecklistStates() {
        localStorage.setItem('hvc_checklists', JSON.stringify(this.checklistStates));
    }

    exportRecommendations(recommendationIds) {
        const recommendations = recommendationIds.map(id => ENHANCED_RECOMMENDATIONS.getRecommendationById(id)).filter(Boolean);
        const exportData = {
            exportedAt: new Date().toISOString(),
            recommendations: recommendations,
            favorites: Array.from(this.favorites),
            usageStats: this.usageStats
        };
        return JSON.stringify(exportData, null, 2);
    }

    importRecommendations(jsonData) {
        try {
            const data = JSON.parse(jsonData);
            if (data.favorites) {
                this.favorites = new Set(data.favorites);
                this.saveFavorites();
            }
            if (data.usageStats) {
                this.usageStats = data.usageStats;
                localStorage.setItem('hvc_usage_stats', JSON.stringify(this.usageStats));
            }
            return true;
        } catch (error) {
            console.error('Error importing recommendations:', error);
            return false;
        }
    }
}

export const recommendationManager = new RecommendationManager();

