{
  "permissions": {
    "allow": [
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: Corregir lógica de cálculo de pasajeros en Tracking (recuperados vs en riesgo)\n\nCambios Principales:\n\n1. PROBLEMA IDENTIFICADO:\n\n   La lógica anterior era demasiado restrictiva y con conflictos:\n   - \"Recuperados\" solo consideraba: detractor (≤6) → promotor (≥9)\n   - Esto excluía recuperaciones de ≤6 a 7-8 (que también son mejoras)\n   - Un pasajero podía aparecer en AMBAS listas simultáneamente\n   - Las cards no reflejaban la data real de las pruebas\n\n2. NUEVA LÓGICA IMPLEMENTADA:\n\n   PASAJEROS RECUPERADOS:\n   - Anterior: calificación ≤ 6 (detractor)\n   - Actual: calificación > 6 (mejoró a 7, 8, 9 o 10)\n   - Ejemplo: 5 → 7 ✓ | 6 → 8 ✓ | 4 → 9 ✓\n   - Ahora captura TODAS las recuperaciones reales\n\n   PASAJEROS EN RIESGO:\n   - Última calificación ≤ 6 (detractor)\n   - Y NO está en recuperados (son mutuamente excluyentes)\n   - Indica si tiene acciones de recuperación aplicadas\n\n   ESTADOS MUTUAMENTE EXCLUYENTES:\n   - Un pasajero solo puede estar en UNA categoría a la vez\n   - Prioridad: Si mejoró → Recuperado | Si sigue bajo → En riesgo\n\n3. CASOS CUBIERTOS:\n\n   Caso 1: Solo 1 interacción con calificación baja (≤6)\n   → EN RIESGO ✓\n\n   Caso 2: 2+ interacciones, última es baja (≤6)\n   → EN RIESGO ✓\n\n   Caso 3: 2+ interacciones, anterior baja (≤6) y última mejoró (>6)\n   → RECUPERADO ✓\n\n   Caso 4: 2+ interacciones, ambas buenas (>6)\n   → Ni en riesgo ni recuperado (cliente satisfecho normal)\n\n4. BENEFICIOS:\n\n   ✓ Refleja data real de las pruebas\n   ✓ Captura todas las recuperaciones (no solo 6→9)\n   ✓ Sin duplicados entre categorías\n   ✓ Lógica clara y predecible\n   ✓ Métricas precisas\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\ndebug: Agregar console.log para investigar problema de pasajeros recuperados\n\nCambios Temporales para Debug:\n\n1. LOGS AGREGADOS:\n\n   - DEBUG de cada pasajero con múltiples interacciones:\n     * Nombre del pasajero\n     * Número de interacciones\n     * Array completo de fechas y ratings\n     * Calificación anterior vs actual\n     * Booleano si cumple condición de recuperado\n\n   - LOG cuando se detecta un pasajero recuperado:\n     * \"✅ RECUPERADO detectado: [nombre] [rating_anterior] → [rating_actual]\"\n\n   - RESUMEN final del tracking:\n     * Total pasajeros\n     * Total interacciones\n     * Cantidad en riesgo\n     * Cantidad recuperados\n     * Cantidad cumpleaños\n     * Cantidad recientes 24h\n\n   - LISTAS de nombres:\n     * ✅ Pasajeros recuperados\n     * ⚠️ Pasajeros en riesgo\n\n2. OBJETIVO:\n\n   Estos logs ayudarán a identificar:\n   - Si las interacciones están en el orden correcto\n   - Si los ratings se están comparando correctamente\n   - Por qué \"recuperados\" muestra 0 cuando debería haber al menos 1\n   - Por qué \"HOY\" muestra 4 cuando solo hay 1 pasajero\n\n3. INSTRUCCIONES PARA EL USUARIO:\n\n   Abrir consola del navegador (F12) y revisar:\n   - Buscar \"DEBUG Pasajero:\" para ver cada pasajero analizado\n   - Buscar \"✅ RECUPERADO detectado\" para confirmar detecciones\n   - Buscar \"📊 RESUMEN TRACKING\" para ver totales finales\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\ndebug: Mejorar logs con JSON.stringify para ver datos completos\n\nMejoras en Debug:\n\n1. Cambio de console.log de Object a JSON.stringify:\n   - Ahora los objetos se muestran completos en la consola\n   - Formato indentado para mejor lectura\n   - Se ven todos los valores, no solo \"[Object]\"\n\n2. Logs adicionales:\n   - Total de pasajeros con interacciones\n   - Nombre y cantidad de interacciones de cada pasajero\n   - Condiciones individuales evaluadas (para ver cuál falla)\n\n3. Información detallada por pasajero:\n   - previousRatingExiste\n   - previousRatingMenorIgual6\n   - latestRatingMayor6\n   - esRecuperado (resultado final)\n\nEsto ayudará a identificar exactamente qué condición no se cumple.\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: Corregir búsqueda de calificación anterior ignorando interacciones sin rating\n\nCambios Principales:\n\n1. PROBLEMA IDENTIFICADO:\n\n   Cuando un pasajero tenía múltiples interacciones y alguna sin calificación:\n   \n   Ejemplo:\n   - Interacción 1 (más reciente): rating 9\n   - Interacción 2: rating null ❌ (sin calificación)\n   - Interacción 3: rating 9\n   - Interacción 4 (más antigua): rating 5\n   \n   La lógica anterior tomaba interactions[1] (rating null) como \"anterior\"\n   Entonces: previousRating = null → condición fallaba\n   Resultado: No detectaba recuperación de 5 → 9\n\n2. SOLUCIÓN IMPLEMENTADA:\n\n   Nueva lógica con bucle for:\n   - Busca la PRIMERA interacción anterior que tenga calificación válida\n   - Salta interacciones con rating null o undefined\n   - Ahora encuentra correctamente: anterior = 9 (index 2)\n   \n   Código:\n   ```javascript\n   let previousRating = null;\n   for (let i = 1; i < interactions.length; i++) {\n       if (interactions[i].calificacion_medallia !== null) {\n           previousRating = interactions[i].calificacion_medallia;\n           break;\n       }\n   }\n   ```\n\n3. CASO REAL RESUELTO:\n\n   Pedro Ramos con 4 interacciones:\n   - [0] 2025-10-20 23:21 → rating: 9 ✅\n   - [1] 2025-10-20 17:19 → rating: null (ignorado)\n   - [2] 2025-10-20 15:36 → rating: 9 ✅ (anterior válida)\n   - [3] 2025-10-19 23:29 → rating: 5 ✅\n   \n   Antes: No detectaba recuperación\n   Ahora: Detecta 9 vs 9 (no recuperado porque ambas son buenas)\n   \n   Nota: Para ver recuperación real necesita:\n   - Interacción antigua con rating ≤6\n   - Interacción reciente con rating >6\n\n4. BENEFICIOS:\n\n   ✓ Maneja correctamente interacciones sin calificación\n   ✓ Encuentra la calificación anterior válida más cercana\n   ✓ Detecta recuperaciones que antes fallaban\n   ✓ Más robusto ante datos incompletos\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add:*)",
      "Bash(git commit:*)"
    ],
    "deny": [],
    "ask": []
  }
}
